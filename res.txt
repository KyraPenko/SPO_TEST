List of tokens:

 [{'VAR': 'a'}, {'APPOINT_OP': '='}, {'NUMBER': '6'}, {'END_COM': ';'}, {'VAR': 'b'}, {'APPOINT_OP': '='},
 {'NUMBER': '4'}, {'END_COM': ';'}, {'VAR': 'c'}, {'APPOINT_OP': '='}, {'NUMBER': '2'}, {'END_COM': ';'},
 {'VAR': 'd'}, {'APPOINT_OP': '='}, {'LINKED_LIST_KW': 'LinkedList'}, {'END_COM': ';'}, {'VAR': 'd'},
 {'POINT': '.'}, {'METHOD': 'push'}, {'LBreaket': '('}, {'NUMBER': '6'}, {'RBreaket': ')'}, {'END_COM': ';'},
 {'VAR': 'd'}, {'POINT': '.'}, {'METHOD': 'push'}, {'LBreaket': '('}, {'NUMBER': '2'}, {'RBreaket': ')'},
 {'END_COM': ';'}, {'VAR': 'd'}, {'POINT': '.'}, {'METHOD': 'push'}, {'LBreaket': '('}, {'NUMBER': '3'},
 {'RBreaket': ')'}, {'END_COM': ';'}, {'VAR': 'd'}, {'POINT': '.'}, {'METHOD': 'push'}, {'LBreaket': '('},
 {'NUMBER': '5'}, {'RBreaket': ')'}, {'END_COM': ';'}, {'WHILE': 'while'}, {'LBreaket': '('}, {'VAR': 'a'},
 {'LOG_OP': '>'}, {'VAR': 'b'}, {'RBreaket': ')'}, {'LFBreaket': '{'}, {'IF': 'if'}, {'LBreaket': '('},
 {'VAR': 'a'}, {'LOG_OP': '>'}, {'VAR': 'c'}, {'RBreaket': ')'}, {'LFBreaket': '{'}, {'VAR': 'c'},
 {'APPOINT_OP': '='}, {'VAR': 'b'}, {'OP': '-'}, {'VAR': 'd'}, {'POINT': '.'}, {'METHOD': 'get'},
 {'LBreaket': '('}, {'NUMBER': '4'}, {'RBreaket': ')'}, {'END_COM': ';'}, {'RFBreaket': '}'}, {'ELSE': 'else'},
 {'LFBreaket': '{'}, {'IF': 'if'}, {'LBreaket': '('}, {'VAR': 'b'}, {'LOG_OP': '>'}, {'VAR': 'c'},
 {'RBreaket': ')'}, {'LFBreaket': '{'}, {'VAR': 'b'}, {'APPOINT_OP': '='}, {'VAR': 'b'}, {'OP': '+'},
 {'NUMBER': '4'}, {'END_COM': ';'}, {'RFBreaket': '}'}, {'ELSE': 'else'}, {'LFBreaket': '{'}, {'VAR': 'a'},
 {'APPOINT_OP': '='}, {'VAR': 'b'}, {'OP': '-'}, {'NUMBER': '4'}, {'END_COM': ';'}, {'RFBreaket': '}'},
 {'RFBreaket': '}'}, {'VAR': 'c'}, {'APPOINT_OP': '='}, {'VAR': 'a'}, {'OP': '+'}, {'NUMBER': '6'},
 {'END_COM': ';'}, {'RFBreaket': '}'}, {'VAR': 'd'}, {'POINT': '.'}, {'METHOD': 'remove'}, {'LBreaket': '('},
 {'NUMBER': '3'}, {'RBreaket': ')'}, {'END_COM': ';'}, {'VAR': 'a'}, {'APPOINT_OP': '='}, {'VAR': 'a'},
 {'OP': '+'}, {'NUMBER': '5'}, {'END_COM': ';'}]

Output tree:

	exp
		appoint_exp
			VAR a
			APPOINT_OP =
			math_exp
				NUMBER 6
	exp
		appoint_exp
			VAR b
			APPOINT_OP =
			math_exp
				NUMBER 4
	exp
		appoint_exp
			VAR c
			APPOINT_OP =
			math_exp
				NUMBER 2
	exp
		appoint_exp
			VAR d
			APPOINT_OP =
			LINKED_LIST_KW LinkedList
	exp
		VAR d
		method
			METHOD push
				LBreaket (
				math_exp
					LBreaket (
					math_exp
						NUMBER 6
					RBreaket
	exp
		VAR d
		method
			METHOD push
				LBreaket (
				math_exp
					LBreaket (
					math_exp
						NUMBER 2
					RBreaket
	exp
		VAR d
		method
			METHOD push
				LBreaket (
				math_exp
					LBreaket (
					math_exp
						NUMBER 3
					RBreaket
	exp
		VAR d
		method
			METHOD push
				LBreaket (
				math_exp
					LBreaket (
					math_exp
						NUMBER 5
					RBreaket
	exp
		while_exp
			LBreaket (
				logic
					VAR a
					LOG_OP >
					logic
						VAR b
			RBreaket
			LFBreaket
				exp
					if_exp
						LBreaket (
							logic
								VAR a
								LOG_OP >
								logic
									VAR c
						RBreaket
						LFBreaket
							exp
								appoint_exp
									VAR c
									APPOINT_OP =
									math_exp
										VAR b
										OP -
										math_exp
											VAR d
												method
													METHOD get
														LBreaket (
														math_exp
															LBreaket (
															math_exp
																NUMBER 4
															RBreaket
						RFBreaket
					ELSE
						LFBreaket
							exp
								if_exp
									LBreaket (
										logic
											VAR b
											LOG_OP >
											logic
												VAR c
									RBreaket
									LFBreaket
										exp
											appoint_exp
												VAR b
												APPOINT_OP =
												math_exp
													VAR b
													OP +
													math_exp
														NUMBER 4
									RFBreaket
								ELSE
									LFBreaket
										exp
											appoint_exp
												VAR a
												APPOINT_OP =
												math_exp
													VAR b
													OP -
													math_exp
														NUMBER 4
									RFBreaket
						RFBreaket
				exp
					appoint_exp
						VAR c
						APPOINT_OP =
						math_exp
							VAR a
							OP +
							math_exp
								NUMBER 6
			RFBreaket
	exp
		VAR d
		method
			METHOD remove
				LBreaket (
				math_exp
					LBreaket (
					math_exp
						NUMBER 3
					RBreaket
	exp
		appoint_exp
			VAR a
			APPOINT_OP =
			math_exp
				VAR a
				OP +
				math_exp
					NUMBER 5

['a', '6', '=', 'b', '4', '=', 'c', '2', '=', 'd', 'LinkedList', '=', 'd', '6', 'push', 'd', '2', 'push', 'd', '3',
'push', 'd', '5', 'push', 'a', 'b', '>', 62, 'a', 'c', '>', 39, 'c', 'b', 'd', '4', 'get', '-', '=', '!57', 57, 'b',
'c', '>', 50, 'b', 'b', '4', '+', '=', '!57', 57, 'a', 'b', '4', '-', '=', 'c', 'a', '6', '+', '=', 'd', '3', 'remove',
'a', 'a', '5', '+', '=']
{'a': 11, 'b': 4, 'c': 2, 'd': [ 6,2,5,]}